Current documentation for WoWAnalyzer

/README.md
# WoWAnalyzer
- Summary + website + links to Discord & Github issues
## Contributing
- spec add requirements
- link: contributing guidelines (/CONTRIBUTING.md)
## Vision
- focus of site
## Collaboration
- amount/freq of contribs expectations (or lack thereof)
## License
- link: license (/LICENSE.md)
- use your own API keys

/CONTRIBUTING.md
# Contributing
- intro
# Installing
- install instructions, including:
--- git clone repo
--- NodeJS / npm install
--- WCL API key
- Docker container
# Running
- npm start + localhost:3000 page launched
## Troubleshooting
- path errors (module not found)
- Error: Invalid key specified
- missing module/library --> update dependencies
# Editing
- git checkout -b my-new-feature
- browser auto-refreshes
- Holy Paladin is an example
- links: 
--- create a spec (/CONTRIBUTING.SPEC.md) 
--- create a module (/CONTRIBUTING.MODULE.md)
# Quick start
- project main structure
# Sharing your changes
- commit, push to fork, create pull request
- PR will be reviewed for potential issues
- update changelog
- PR review goals: small PRs within 24hr, anything within 48hr; 
larger may take longer; longest goal = 7d (can ping past)
- link: contributors on Discord/GitHub (/CONTRIBUTORNAMES.md)
# Code style
- eslint rules to pass automatic TravisCI check
- Holy Paladin example, again
- comment why, not what
- anyone reading the spec code should know the spec
## Consistency
- multiple spec consistency
- first 2 stats are always healing/damage done & downtime
- DPS/HPS > percentage of total
- performance of item: % / k HPS format + detailed info in the tooltip
- stat boxes & item values one-liners + details in tooltip
- no useless tooltips
- no primary stat amounts for performance indicators
- discuss first if working on a radical idea

/CONTRIBUTORNAMES.md
# Contributor names
- table of Discord + GitHub names

/CONTRIBUTING.MODULE.md
# Making a module
- what a module is for
- code block example
- on_ function = event listeners
- byPlayer & toPlayer --> focus on the selected player w/o messy code later
- import module + enable in a parser within a spec
- Further documentation needed but also look at Holy Paladin as example
- also ask in WoWAnalyzer Discord

/CONTRIBUTING.SPEC.md
# Adding a new spec
- spec focus requirements again
- order for adding contents for a new spec 
# Add an empty spec
- Instructions to set up a "blank" spec using the Holy Paladin as a framework
- including tests folder
# Add a total damage done / healing done / damage taken statistic
- See Holy Paladin
# Add cast efficiency
- See Holy Paladin
# Add Always be Casting
- See Holy Paladin
# Create a pull request
- link: /CONTRIBUTING.md
# Suggestions
- suggestions for the player
- expect to fiddle with it a lot as you refine your suggestions
## Suggestion texts
- explain what was found
- make a suggestions
- explain why suggestions
- suggest an alternative
## Suggestion thresholds
- major / average / minor impact on performance
- thresholds should be consistent regardless of fight length --> percents > amts
- properties in the cast efficieny config to change threshold, disable, or limit
importance of suggestions -- "use them" (but no description of them)
- ask someone to review your suggestions thresholds outside a PR

/EVENTS.md
- list of events available
- some entries have ???

/CREDITS.md
- credit to layout inspiration

/ISSUE_TEMPLATE.md
- what it says on the tin

